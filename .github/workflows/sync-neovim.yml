name: Sync Neovim Release
# 从https://gitlab.b-data.ch/neovim/neovim 下载 arm64 neovim
on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'  # 每天定时运行一次，也可以根据需要修改

jobs:
  download_and_release:
    runs-on: ubuntu-latest

    steps:
    - name: Set up Git
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"

    - name: Get latest release tag from GitLab
      id: get_release_tag
      run: |
        releases_tag=$(curl -s "https://gitlab.b-data.ch/api/v4/projects/362/releases" | grep -Eo '"tag_name":"v[0-9]+\.[0-9]+\.[0-9]+"' | head -n 1 | awk -F'"' '{print $4}')
        echo "releases_tag=$releases_tag" >> $GITHUB_ENV

    - name: Download the latest Neovim release
      run: |
        curl -L "https://gitlab.b-data.ch/neovim/neovim/-/releases/$releases_tag/downloads/builds/nvim-linux-arm64.tar.gz" -o nvim-linux-arm64.tar.gz

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: "${{ env.releases_tag }}"
        release_name: "Neovim ${{ env.releases_tag }}"
        draft: false
        prerelease: false

    - name: Upload Asset to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./nvim-linux-arm64.tar.gz
        asset_name: nvim-linux-arm64.tar.gz
        asset_content_type: application/gzip
